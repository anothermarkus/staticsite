@layer base, utils, components;

/* Base styles */
@import "@webtui/css/base.css";

/* Utilities */
@import "@webtui/css/utils/box.css";

/* Components */
@import "@webtui/css/components/button.css";
@import "@webtui/css/components/typography.css";

/* Optionally add your own styles */
@layer components {
  body {
    background-color:white;
  }
}


     html, body {
        margin:0;
        padding:0;
        font-family:system-ui, sans-serif;
      }

      body {
        display:flex;
        align-items:flex-start;  /* prevents vertical centering */
        min-height:100vh;        /* ensures it takes full height for layout */
      }

      #contents {
        margin:2rem;
        max-width:900px;
        width:100%;
      }


      @layer base,utils,components;@layer base,utils,components;@layer base {
    :root {
        --background0:#fff;
        --background1:#ddd;
        --background2:#bbb;
        --background3:#999;
        --foreground0:#000;
        --foreground1:#444;
        --foreground2:#888;
        --font-size:16px;
        --line-height:1.3;
        --font-weight-bold:700;
        --font-weight-normal:400;
        --font-family:monospace
    }

    [data-webtui-theme=dark] {
        --background0:#000;
        --background1:#222;
        --background2:#444;
        --background3:#666;
        --foreground0:#fff;
        --foreground1:#ccc;
        --foreground2:#999
    }

    body,html {
        background-color:var(--background0);
        color:var(--foreground0);
        font-family:var(--font-family);
        font-size:var(--font-size);
        font-weight:var(--font-weight-normal);
        line-height:var(--line-height, 1.5);
        font-variant-ligatures:common-ligatures
    }

    * {
        box-sizing:border-box;
        margin:0;
        padding:0;
        outline:none
    }
}

@layer utils {
    @property --box-rounded-radius {
        syntax:"<length>";
        inherits:false;
        initial-value:4px;
    }

    @property --box-border-width {
        syntax:"<length>";
        inherits:false;
        initial-value:2px;
    }

    @property --box-double-border-width {
        syntax:"<length>";
        inherits:false;
        initial-value:1px;
    }

    [box-~=square],[box-~=round],[box-~=double] {
        --box-border-color:var(--foreground0);
        position:relative;
        isolation:isolate;
        padding:1lh 1ch
    }

    [box-~=square]:before,[box-~=round]:before,[box-~=double]:before {
        content:"";
        position:absolute;
        top:50%;
        left:50%;
        translate:-50% -50%;
        width:calc(100% - 1ch - 2px);
        height:calc(100% - 1lh - 2px);
        border:solid var(--box-border-width) var(--box-border-color);
        z-index:-1
    }

    [box-~=square][box-~=round]:before,[box-~=round][box-~=round]:before,[box-~=double][box-~=round]:before {
        border-radius:var(--box-rounded-radius)
    }

    [box-~=square][box-~=round]:after,[box-~=round][box-~=round]:after,[box-~=double][box-~=round]:after {
        border-radius:calc(var(--box-rounded-radius) + 2px)
    }

    [box-~=square][box-~=double]:before,[box-~=round][box-~=double]:before,[box-~=double][box-~=double]:before {
        border-width:var(--box-double-border-width)
    }

    [box-~=square][box-~=double]:after,[box-~=round][box-~=double]:after,[box-~=double][box-~=double]:after {
        content:"";
        position:absolute;
        top:50%;
        left:50%;
        translate:-50% -50%;
        width:calc(100% - 1ch + 2px);
        height:calc(100% - 1lh + 2px);
        border:solid var(--box-double-border-width) var(--box-border-color);
        z-index:-1
    }

    [box-~=square][box-~="contain:none"],[box-~=round][box-~="contain:none"],[box-~=double][box-~="contain:none"] {
        padding-top:0;
        padding-bottom:0
    }

    [box-~=square][box-~="contain:!top"],[box-~=round][box-~="contain:!top"],[box-~=double][box-~="contain:!top"] {
        padding-top:0
    }

    [box-~=square][box-~="contain:!bottom"],[box-~=round][box-~="contain:!bottom"],[box-~=double][box-~="contain:!bottom"] {
        padding-bottom:0
    }
}

@layer components {
    button,[is-~=button] {
        --button-primary:var(--foreground0);
        --button-secondary:var(--background0);
        color:var(--button-secondary);
        background-color:var(--button-primary);
        font-family:var(--font-family);
        font-size:var(--font-size);
        line-height:var(--line-height);
        display:inline-flex;
        align-items:center;
        justify-content:center;
        border:none;
        padding:0 2ch;
        height:3lh;
        outline:none
    }

    button[box-],[is-~=button][box-] {
        color:var(--button-primary);
        background-color:transparent;
        --box-border-color:var(--button-primary)
    }

    button:focus,[is-~=button]:focus {
        font-weight:700;
        text-decoration:underline
    }

    button:active,[is-~=button]:active {
        color:var(--button-primary);
        background-color:var(--button-secondary)
    }

    button:active[box-],[is-~=button]:active[box-] {
        --box-border-color:var(--button-secondary);
        background-color:transparent
    }

    button:disabled,[is-~=button]:disabled {
        text-decoration:line-through;
        pointer-events:none
    }

    button[size-=small],[is-~=button][size-=small] {
        padding:0 1ch;
        height:1lh
    }

    button[variant-=foreground0],button:not([variant]),[is-~=button][variant-=foreground0],[is-~=button]:not([variant]) {
        --button-primary:var(--foreground0);
        --button-secondary:var(--background0)
    }

    button[variant-=foreground1],[is-~=button][variant-=foreground1] {
        --button-primary:var(--foreground1);
        --button-secondary:var(--background0)
    }

    button[variant-=foreground2],[is-~=button][variant-=foreground2] {
        --button-primary:var(--foreground2);
        --button-secondary:var(--background0)
    }

    button[variant-=background0],[is-~=button][variant-=background0] {
        --button-primary:var(--background0);
        --button-secondary:var(--foreground0)
    }

    button[variant-=background1],[is-~=button][variant-=background1] {
        --button-primary:var(--background1);
        --button-secondary:var(--foreground0)
    }

    button[variant-=background2],[is-~=button][variant-=background2] {
        --button-primary:var(--background2);
        --button-secondary:var(--foreground0)
    }

    button[variant-=background3],[is-~=button][variant-=background3] {
        --button-primary:var(--background3);
        --button-secondary:var(--foreground0)
    }
}

@layer components {
    h1,h2,h3,h4,h5,h6 {
        font-family:var(--font-family);
        font-size:var(--font-size);
        line-height:var(--line-height);
        font-weight:var(--font-weight-bold)
    }

    h1 code,h2 code,h3 code,h4 code,h5 code,h6 code {
        color:inherit;
        background-color:var(--background1);
        padding:0 1ch
    }

    h1:before {
        content:"# "
    }

    h2:before {
        content:"## "
    }

    h3:before {
        content:"### "
    }

    h4:before {
        content:"#### "
    }

    h5:before {
        content:"##### "
    }

    h6:before {
        content:"###### "
    }

    ol {
        list-style-position:inside
    }

    ol li>ol {
        margin-left:2ch
    }

    ul {
        list-style-type:none
    }

    ul li:before {
        color:inherit;
        content:"- "
    }

    ul[marker-=bullet] li:before {
        content:"• "
    }

    ul[marker-~=tree] li:before {
        content:"├ "
    }

    ul[marker-~=tree]:not([marker-^=open]) li:first-of-type:before {
        content:"┌ "
    }

    ul[marker-~=tree]:not([marker-$=open]) li:last-of-type:before {
        content:"└ "
    }

    ul li>ul {
        margin-left:2ch
    }

    p,blockquote,li,[is-~=typography-block] {
        font-family:var(--font-family);
        font-size:var(--font-size);
        line-height:var(--line-height);
        color:var(--foreground1)
    }

    p:is(blockquote),blockquote:is(blockquote),li:is(blockquote),[is-~=typography-block]:is(blockquote) {
        padding-left:2ch;
        position:relative
    }

    p:is(blockquote):before,blockquote:is(blockquote):before,li:is(blockquote):before,[is-~=typography-block]:is(blockquote):before {
        content:"";
        position:absolute;
        top:0;
        left:.5ch;
        width:var(--box-border-width, 2px);
        height:100%;
        translate:-50%;
        background-color:var(--background2)
    }

    p strong,blockquote strong,li strong,[is-~=typography-block] strong {
        font-weight:var(--font-weight-bold);
        color:var(--foreground0)
    }

    p a,blockquote a,li a,[is-~=typography-block] a {
        text-decoration:underline
    }

    p code,blockquote code,li code,[is-~=typography-block] code {
        display:inline-block;
        background-color:var(--background1);
        padding-left:1ch;
        padding-right:1ch
    }
}

@layer components {
    [is-~=badge] {
        color:var(--badge-text);
        background-color:var(--badge-color);
        display:inline-flex;
        vertical-align:middle;
        white-space:nowrap;
        height:1lh;
        line-height:1lh;
        padding:0 1ch
    }

    [is-~=badge][variant-=foreground0],[is-~=badge]:not([variant]) {
        --badge-color:var(--foreground0);
        --badge-text:var(--background0)
    }

    [is-~=badge][variant-=foreground1] {
        --badge-color:var(--foreground1);
        --badge-text:var(--background0)
    }

    [is-~=badge][variant-=foreground2] {
        --badge-color:var(--foreground2);
        --badge-text:var(--background0)
    }

    [is-~=badge][variant-=background0] {
        --badge-color:var(--background0);
        --badge-text:var(--foreground0)
    }

    [is-~=badge][variant-=background1] {
        --badge-color:var(--background1);
        --badge-text:var(--foreground0)
    }

    [is-~=badge][variant-=background2] {
        --badge-color:var(--background2);
        --badge-text:var(--foreground0)
    }

    [is-~=badge][variant-=background3] {
        --badge-color:var(--background3);
        --badge-text:var(--foreground0)
    }
}

@layer components {
    input,[is-~=input] {
        background-color:var(--background1);
        color:var(--foreground0);
        font-family:var(--font-family);
        font-size:var(--font-size);
        font-weight:var(--font-weight-normal);
        line-height:var(--line-height);
        outline:none;
        border:none;
        min-width:24ch
    }

    input::placeholder,[is-~=input]::placeholder {
        color:var(--foreground2)
    }

    input:not([size-]),[is-~=input]:not([size-]) {
        height:1lh;
        padding:0 1ch
    }

    input[size-=small],[is-~=input][size-=small] {
        height:1lh;
        padding:0
    }

    input[size-=large],[is-~=input][size-=large] {
        height:3lh;
        padding:1lh 2ch
    }
}

@layer components {
    details[is-=popover] {
        --popover-backdrop-color:transparent;
        --popover-offset-x:0;
        --popover-offset-y:0;
        position:relative
    }

    details[is-=popover] summary::marker {
        content:"";
        display:none
    }

    details[is-=popover][open] summary:before {
        content:"";
        display:block;
        width:100vw;
        height:100vh;
        position:fixed;
        inset:0;
        z-index:1;
        background-color:var(--popover-backdrop-color);
        cursor:default
    }

    details[is-=popover][open] summary::marker {
        content:"";
        display:none
    }

    details[is-=popover][open] summary+* {
        position:absolute;
        z-index:2
    }

    details[is-=popover][open][position-~=baseline-left] summary+*,details[is-=popover][open]:not([position-]) summary+* {
        left:0%
    }

    details[is-=popover][open][position-~=baseline-right] summary+* {
        left:100%;
        translate:-100%
    }

    details[is-=popover][open][position-~=left] summary+* {
        left:calc(var(--popover-offset-x) * -1);
        translate:-100%
    }

    details[is-=popover][open][position-~=right] summary+* {
        left:calc(100% + var(--popover-offset-x))
    }

    details[is-=popover][open][position-~=baseline-top] summary+* {
        top:0%
    }

    details[is-=popover][open][position-~=baseline-bottom] summary+* {
        top:100%;
        transform:translateY(-100%)
    }

    details[is-=popover][open][position-~=top] summary+* {
        top:calc(var(--popover-offset-y) * -1);
        transform:translateY(-100%)
    }

    details[is-=popover][open][position-~=bottom] summary+*,details[is-=popover][open]:not([position-]) summary+* {
        top:calc(100% + var(--popover-offset-y))
    }
}

@layer utils {
    column,[is-~=column] {
        flex-direction:column
    }

    row,column,[is-~=row],[is-~=column] {
        display:flex;
        &[gap-~="1"] {
            column-gap:1ch;
            row-gap:1lh
        }

        &[gap-~="2"] {
            column-gap:2ch;
            row-gap:2lh
        }

        &[gap-~="4"] {
            column-gap:4ch;
            row-gap:4lh
        }

        &[self-~=grow] {
            flex-grow:1
        }

        &[self-~="!grow"] {
            flex-grow:1
        }

        &[self-~=shrink] {
            flex-shrink:1
        }

        &[self-~="!shrink"] {
            flex-shrink:1
        }

        &[self-~="!basis"] {
            flex-basis:0
        }

        &[align-^=start] {
            align-items:flex-start
        }

        &[align-^=end] {
            align-items:flex-end
        }

        &[align-^=center] {
            align-items:center
        }

        &[align-^=stretch] {
            align-items:stretch
        }

        &[align-$=between] {
            justify-content:space-between
        }

        &[align-$=start] {
            justify-content:flex-start
        }

        &[align-$=end] {
            justify-content:flex-end
        }

        &[align-$=center] {
            justify-content:center
        }
    }
}

@layer utils {
    [space-] {
        &[space-~="p:0"] {
            padding:0
        }

        &[space-~="p:1"] {
            padding:1lh 1ch
        }

        &[space-~="p:2"] {
            padding:2lh 2ch
        }

        &[space-~="px:0"] {
            padding-left:0;
            padding-right:0
        }

        &[space-~="px:1"] {
            padding-left:1ch;
            padding-right:1ch
        }

        &[space-~="px:2"] {
            padding-left:2ch;
            padding-right:2ch
        }

        &[space-~="px:3"] {
            padding-left:3ch;
            padding-right:3ch
        }

        &[space-~="px:4"] {
            padding-left:4ch;
            padding-right:4ch
        }

        &[space-~="py:0"] {
            padding-top:0;
            padding-bottom:0
        }

        &[space-~="py:1"] {
            padding-top:1lh;
            padding-bottom:1lh
        }

        &[space-~="py:2"] {
            padding-top:2lh;
            padding-bottom:2lh
        }

        &[space-~="pl:0"] {
            padding-left:0
        }

        &[space-~="pl:1"] {
            padding-left:1ch
        }

        &[space-~="pl:2"] {
            padding-left:2ch
        }

        &[space-~="pr:0"] {
            padding-right:0
        }

        &[space-~="pr:1"] {
            padding-right:1ch
        }

        &[space-~="pr:2"] {
            padding-right:2ch
        }

        &[space-~="pt:0"] {
            padding-top:0
        }

        &[space-~="pt:1"] {
            padding-top:1lh
        }

        &[space-~="pt:2"] {
            padding-top:2lh
        }

        &[space-~="pb:0"] {
            padding-bottom:0
        }

        &[space-~="pb:1"] {
            padding-bottom:1lh
        }

        &[space-~="pb:2"] {
            padding-bottom:2lh
        }

        &[space-~="mx:0"] {
            margin-left:0;
            margin-right:0
        }

        &[space-~="mx:1"] {
            margin-left:1ch;
            margin-right:1ch
        }

        &[space-~="mx:2"] {
            margin-left:2ch;
            margin-right:2ch
        }

        &[space-~="my:0"] {
            margin-top:0;
            margin-bottom:0
        }

        &[space-~="my:1"] {
            margin-top:1lh;
            margin-bottom:1lh
        }

        &[space-~="my:2"] {
            margin-top:2lh;
            margin-bottom:2lh
        }

        &[space-~="ml:0"] {
            margin-left:0
        }

        &[space-~="ml:1"] {
            margin-left:1ch
        }

        &[space-~="ml:2"] {
            margin-left:2ch
        }

        &[space-~="mr:0"] {
            margin-right:0
        }

        &[space-~="mr:1"] {
            margin-right:1ch
        }

        &[space-~="mr:2"] {
            margin-right:2ch
        }

        &[space-~="mt:0"] {
            margin-top:0
        }

        &[space-~="mt:1"] {
            margin-top:1lh
        }

        &[space-~="mt:2"] {
            margin-top:2lh
        }

        &[space-~="mb:0"] {
            margin-bottom:0
        }

        &[space-~="mb:1"] {
            margin-bottom:1lh
        }

        &[space-~="mb:2"] {
            margin-bottom:2lh
        }
    }
}

@layer components {
    [is-~=badge] {
        background-color:transparent;
        background-image:linear-gradient(90deg,transparent 0,transparent 1ch,var(--badge-color) 1ch,var(--badge-color) calc(100% - 1ch),transparent calc(100% - 1ch),transparent);
        color:var(--badge-text);
        padding-left:0;
        padding-right:0
    }

    [is-~=badge]:before,[is-~=badge]:after {
        content:"";
        width:1ch;
        height:1lh;
        line-height:1lh;
        display:inline-block;
        vertical-align:middle;
        background-color:transparent;
        color:var(--badge-color)
    }

    [is-~=badge]:not([cap-]):before,[is-~=badge][cap-^=square]:before {
        content:"a";
        background-color:var(--badge-color);
        color:transparent
    }

    [is-~=badge]:not([cap-]):after,[is-~=badge][cap-$=square]:after {
        content:"a";
        background-color:var(--badge-color);
        color:transparent
    }

    [is-~=badge][cap-][cap-^=round]:before {
        content:""
    }

    [is-~=badge][cap-][cap-^=triangle]:before {
        content:""
    }

    [is-~=badge][cap-][cap-^=ribbon]:before {
        content:""
    }

    [is-~=badge][cap-][cap-^=slant-top]:before {
        content:""
    }

    [is-~=badge][cap-][cap-^=slant-bottom]:before {
        content:""
    }

    [is-~=badge][cap-][cap-$=round]:after {
        content:""
    }

    [is-~=badge][cap-][cap-$=triangle]:after {
        content:""
    }

    [is-~=badge][cap-][cap-$=ribbon]:after {
        content:""
    }

    [is-~=badge][cap-][cap-$=slant-top]:after {
        content:""
    }

    [is-~=badge][cap-][cap-$=slant-bottom]:after {
        content:""
    }
}

@layer components {
    details summary::marker {
        content:" ";
        width:2ch;
        display:flex
    }

    details[open] summary::marker {
        content:" "
    }
}

@font-face {
    font-family:JetBrainsMonoNFM;
    src:url(/fonts/JetBrainsMonoNerdFontMono-Bold.ttf) format("truetype");
    font-stretch:normal;
    font-style:normal;
    font-weight:700
}

@font-face {
    font-family:JetBrainsMonoNFM;
    src:url(/fonts/JetBrainsMonoNerdFontMono-BoldItalic.ttf) format("truetype");
    font-stretch:normal;
    font-style:italic;
    font-weight:700
}

@font-face {
    font-family:JetBrainsMonoNFM;
    src:url(/fonts/JetBrainsMonoNerdFontMono-Italic.ttf) format("truetype");
    font-stretch:normal;
    font-style:italic;
    font-weight:400
}

@font-face {
    font-family:JetBrainsMonoNFM;
    src:url(/fonts/JetBrainsMonoNerdFontMono-Regular.ttf) format("truetype");
    font-stretch:normal;
    font-style:normal;
    font-weight:400
}

@layer base {
    :root {
        --font-family:"JetBrainsMonoNFM", Menlo, Monaco, monospace;
        --font-size:18px;
        --line-height:1.4
    }

    body,html {
        width:100vw;
        height:100vh;
       
        overflow-x:hidden;
        display:flex;
        flex-direction:column
    }

    ::highlight(vim) {
        background-color:var(--foreground0);
        color:var(--background0)
    }
}

@layer components {
    hr {
        display:block;
        padding:.5lh 0;
        width:100%;
        border:none;
        background-image:linear-gradient(0deg,transparent 0,transparent calc(.5lh - 1px),var(--foreground2) calc(.5lh - 1px),var(--foreground2) calc(.5lh + 1px),transparent calc(.5lh + 1px),transparent)
    }
}

@media (max-width:480px) {
    :root {
        --font-size:16px
    }
}

#search-dialog[data-astro-cid-nhxjo3iv] {
    background-color:var(--background0);
    color:var(--foreground0);
    border:none;
    position:fixed;
    top:50%;
    left:50%;
    translate:-50% -50%;
    max-height:20lh;
    max-width:48ch;
    width:100%;
    height:100%;
    overflow:hidden;
    &::backdrop {
        backdrop-filter:grayscale(100%)
    }
}

#search-content[data-astro-cid-nhxjo3iv] {
    position:absolute;
    inset:0;
    display:flex;
    flex-direction:column
}

#search-results[data-astro-cid-nhxjo3iv] {
    flex-grow:1;
    overflow:hidden;
    position:relative;
    #search-results-container {
        position:absolute;
        inset:0;
        overflow-y:auto;
        padding-left:1ch;
        padding-right:1ch;
        display:flex;
        flex-direction:column;
        .search-result {
            text-decoration:none;
            color:var(--foreground1);
            &.hidden {
                display:none
            }

            &:focus,&:hover,&.active {
                background-color:var(--background1)
            }
        }
    }
}

#search-input[data-astro-cid-nhxjo3iv] {
    background-color:var(--background0)
}

&::highlight(search) {
    background-color:var(--background2);
    color:var(--foreground0)
}

nav[data-astro-cid-5blmo7yk] {
    display:flex;
    flex-direction:row;
    justify-content:space-between;
    padding:1lh 2ch;
    container-type:inline-size;
    container-name:navbar;
    --box-border-color:var(--background1);
    white-space:nowrap;
    #home-link {
        text-decoration:none;
        font-weight:700;
        color:var(--foreground1);
        span:first-of-type {
            color:#a6e3a1
        }

        &:focus,&:hover {
            text-decoration:underline
        }
    }
}

#links[data-astro-cid-5blmo7yk] {
    row-gap:2ch;
    column-gap:1lh;
    a {
        display:inline-flex;
        gap:1ch;
        text-decoration:none;
        color:var(--foreground2);
        &:focus,&:hover {
            text-decoration:underline
        }
    }
}

#search-button[data-astro-cid-5blmo7yk] {
    display:inline-flex;
    gap:1ch
}

@media (max-width:84ch) {
    #links[data-astro-cid-5blmo7yk] {
        gap:1ch;
        a {
            background-color:var(--background1);
            padding:0 1ch;
            span:last-of-type {
                display:none
            }
        }
    }
}

@media (max-width:48ch) {
    #search-button[data-astro-cid-5blmo7yk] span[data-astro-cid-5blmo7yk]:last-of-type {
        display:none
    }
}

